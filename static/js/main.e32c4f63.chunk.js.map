{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/home.component.js","components/profile.component.js","services/auth-header.js","services/user.service.js","components/Service/Service.js","components/Service/Services.js","common/EventBus.js","components/Service/AddService.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","Home","content","Profile","redirect","userReady","currentUser","getCurrentUser","to","id","authHeader","user","Authorization","serviceName","serviceDescription","price","headers","get","delete","Service","service","useState","showContactInfo","setShowContactInfo","cursor","float","color","onClick","console","log","userService","deleteService","handleDelete","Services","services","setServices","useEffect","getServies","resp","map","key","eventBus","on","event","callback","document","addEventListener","detail","dispatch","dispatchEvent","CustomEvent","remove","removeEventListener","AddService","ref1","useRef","ref2","ref3","newService","current","App","logOut","undefined","EventBus","logout","href","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e32c4f63.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"https://www.kindpng.com/picc/m/22-223941_transparent-avatar-png-male-avatar-icon-transparent-png.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 2 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 2 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 4 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 4 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n \nexport default class Home extends Component {\n constructor(props) {\n   super(props);\n \n   this.state = {\n     content: \"\"\n   };\n }\n \n componentDidMount() {\n   this.setState({content:\"Welcome to Garage Management system\"})\n }\n \n render() {\n   return (\n     <div className=\"container\">\n       <header className=\"jumbotron\">\n         <h3>{this.state.content}</h3>\n       </header>\n     </div>\n   );\n }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n        <div className=\"jumbotron\">\n        <header >\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        \n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n      </div>: null}\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    return { Authorization: 'Bearer ' + user.accessToken }; \n  } else {\n    return {};\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/services';\n\nclass UserService {\n  newService(serviceName,serviceDescription,price){\n    return axios.post(API_URL,{serviceName,serviceDescription,price},{headers:authHeader()});\n  }\n  getServies(){\n    return axios.get(API_URL,{headers:authHeader()});\n  }\n  deleteService(id){\n    return axios.delete(API_URL+\"/\"+id,{headers:authHeader()});\n  }\n}\n\nexport default new UserService();\n","import React, { useState } from 'react'\nimport userService from '../../services/user.service';\n\nconst Service = ({service}) => {\n  \n  const {id,serviceName,serviceDescription,price} = service;\n    const [showContactInfo, setShowContactInfo] = useState(false);\n    const handleDelete = (id)=>{\n      console.log(id);\n      userService.deleteService(id);\n  }\n  return (\n    <div className=\"card mb-2\">\n            <div className=\"card-header\">\n              <h4>\n              {serviceName}\n              <button\n                  className=\"fa fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={()=>handleDelete(id)}\n                >DEL</button>\n                <button\n                  className=\"fa fa-sort-down mr-5\"\n                  style={{ cursor: \"pointer\", float: \"right\" }}\n                  onClick={() => setShowContactInfo(!showContactInfo)\n                  }\n                >Details</button>\n                \n              </h4>\n            </div>\n            {showContactInfo && (\n              <div className=\"card-body\">\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Description: {serviceDescription}</li>\n                  <li className=\"list-group-item\">Price: {price}</li>\n                </ul>\n              </div>\n            )}\n          </div>\n  )\n}\n\nexport default Service","import React, { useEffect, useState } from 'react'\nimport userService from '../../services/user.service';\nimport Service from './Service';\n\nconst Services = () => {\n    const [services,setServices] = useState([]);\n    useEffect(()=>{\n        userService.getServies().then(resp=>setServices(resp.data));\n    },[])\n    \n  return (\n    <>\n     {\n        services.map((service)=>{\n            return <Service key={service.id} service = {service}/>\n        })}\n    \n    </>\n  )\n}\n\nexport default Services","const eventBus = {\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n\nexport default eventBus;\n","import React, { Component, useRef } from \"react\";\nimport userService from \"../../services/user.service\";\n\n\n\nconst AddService = () => {\n    const ref1 = useRef(null);\n    const ref2 = useRef(null);\n    const ref3 = useRef(null);\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        userService.newService(ref1.current.value,ref2.current.value,ref3.current.value)\n    }\n\n    \n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        \n\n        <form onSubmit={handleSubmit}\n        >\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Service name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              ref={ref1}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Service Description</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              ref={ref2}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Price</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              ref={ref3}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button\n              className=\"btn btn-primary btn-block\"\n            >\n              <span>Add Service</span>\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default AddService","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\n// \nimport Services from \"./components/Service/Services\";\n\n\n\n// import AuthVerify from \"./common/auth-verify\";\nimport EventBus from \"./common/EventBus\";\nimport AddService from \"./components/Service/AddService\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n    \n    EventBus.on(\"logout\", () => {\n      this.logOut();\n    });\n  }\n\n  componentWillUnmount() {\n    EventBus.remove(\"logout\");\n  }\n\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      currentUser: undefined,\n    });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-secondary\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            Garage Management System\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n            {currentUser&&<li className=\"nav-item\">\n              <Link to={\"/service\"} className=\"nav-link\">Services</Link>\n            </li>\n            }\n            {\n             currentUser&& <li className=\"nav-item\">\n              <Link to={\"/service/add\"} className=\"nav-link\"> Add Services</Link>\n            </li>\n            }\n            \n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/service\" component={Services} />\n            <Route exact path=\"/service/add\" component={AddService} />\n          </Switch>\n        </div>\n\n        { /*<AuthVerify logOut={this.logOut}/> */ }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}